<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.StudentMapper">
    <resultMap id="Student" type="com.example.demo.entity.Student">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="number" property="number" jdbcType="INTEGER"/>
        <id column="name" property="name" jdbcType="VARCHAR"/>
        <id column="sex" property="sex" jdbcType="INTEGER"/>
        <id column="classId" property="classId" jdbcType="INTEGER"/>
        <id column="birthDay" property="birthDay" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="countAll" type="com.example.demo.entity.CountAll">
        <id column="name" property="className" jdbcType="VARCHAR"/>
        <id column="countNum" property="countNum" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="addStudent" parameterType="com.example.demo.entity.Student">
        INSERT INTO student(number , name ,sex,classId,birthDay)
        VALUES (#{number,jdbcType=INTEGER},#{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER},#{birthDay,jdbcType=VARCHAR});
    </insert>

    <delete id="deleteStudent" parameterType="int">
        delete from student where number=#{id};
    </delete>


    <select id="getStudent" parameterType="com.example.demo.entity.Student" resultMap="Student">
        select *
        from student
        where 1=1
        <if test="number != null">
            and number = #{number,jdbcType=INTEGER}
        </if>
        <if test="name != null">
            and name like concat('%',#{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="classId != null">
            and classId = #{classId,jdbcType=INTEGER}
        </if>
    </select>

    <update id="updateStudent" parameterType="com.example.demo.entity.Student">
        update student set
        <if test="name != null">
            name = #{name,jdbcType=VARCHAR},
        </if>
        <if test="classId != null">
            classId = #{classId,jdbcType=INTEGER},
        </if>
        number = #{number,jdbcType=INTEGER}
        where number = #{number,jdbcType=INTEGER};
    </update>

    <select id="countStudent" resultMap="countAll">
        select count(*) as countNum,class.name as name from student,class where student.classId=class.id
        <if test="sex != null">
            and sex =#{sex,jdbcType=INTEGER}
        </if>
        group by class.id;
    </select>
</mapper>